<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_luu.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAddEVYdFRpdGxlAEV4cG9ydDtEb2M7RXhwb3J0VG9Eb2M7KCFmkgAACGpJREFUWEfFlnlUlNcZ
        xs1i0zbHGLP12Jy2p80frbWNsY11RUCUVQmiArLLDAgYEJDVgAoILqgBNBijQkU0TVzjGlMwjXHJMQka
        jopssg7DbOzMMGxP3/d+MwRwMP2v95zf3G+++eY+z33f997vTgAgGNGeMvG0iWeewLMW4Pv8/ye2YV0L
        Bp7O+eeNqzmFN5F75CZymIIbyC2Q+mxC6q8jO/863j98HXuo33P4a8GW3ZfSaAw2wuafSsspnpCW/cWE
        VGJkG88AO3+GRX+qGY396NYb0d6hh0rbibrGVnxb1oSSG1VI3HYmncaZSAgTDypbxk7yiQaezT5yg24B
        /YND6O8fpH4Qff1DAiN9Z/SGfnT1GNHaYYBS04Xqeh2yDn6FoSHgXPEDRG05sZXG+hkhTIzQEI2/i3vD
        F1KTDFBIufWREGMWNfaRgb5B9JrQG4zo7DZCo+tBTb0GWz8oFga69P0488U9hCYVZdB4zxGP1cWw7vCF
        1PihibdK6+kWhZkE+0hIEpdERW8chIFS0GtKg7Zdj6p6LVJ2XRIG9PQ7mzh58QcERedn0pg/J0aZGNbl
        D6fEKyVOCVcwFseEzyXiJRwEl4eJ3f8N9L390FEdVNVqEJtxVhjgVBmEiQH861wpfML3P2ZilAEWiTim
        xroiNcKLVAgrVGHtkRaEEPKCFsjyWxCUr0TgYSX8DzEK+H2kwOLYC+ju7UNbpwGVtVpEbDpBw0GYGBgk
        IwNsZADHz9yGhzyHTZhrYrQBh7jLCD2qpPBSWHsHsPOSBh55jTh+sw3dPX0out6KlfsaUPi1TojpKOQr
        9tXDNvozdFMxtnX2ora5DclZ5xGScAzyuCLIY4sg28AcpVTcofRc5jz/kuAojDbAMwkqUAhx9731osLd
        c+upyvuwPLcOHV29om+jin8ntxauORJWkafQSSuhg1C19qC6oRV3Hzbjdlk9bpXW4drtR7h6qwrXvqk2
        G5hk0QDPxO9QAwyUT9fsWvTo+7As+5EYfFl2DdrJwNL3a2jJ6eFCvfOeasGcdZ9Qnmkl0PMcBU0b7Qm0
        IprVXWhQtKOGDFU80tAK0WLjjots4AWCN6nRBqzWn4bnh3Vi5s67qyjsRjhR39ndC0fqOeyOu6pEtdvv
        qoR9VoXg7bVF6CDxDlqKbJL7Nupb2Qw926LrhkLVSRtVFxJ3nGcDky0amLfuU7jn1UBPg3HOU041YknW
        Qxz8UiXED1xVwm5HOfYXK6GmUKtoYNsdDzBDXkDpIXFhQKLNDJlQkwklRYQjF58hDLxo0cCssGNwza3E
        IhqUB2ZstpvYdh/W20fA3zPvY+G2e5gedHCEoBE66nXcd/RCa0JFaeFIxqafZQNTLBqYGXLk8lvBR8SM
        ZsgI6t+U5eMvQYcELDR9DRF4EH8O/AjTAg7gT/4fIpDCyjNlce51hFlYSwWraZfooshuSD/NBl5iA2Zx
        5scLqXGFTvqSKneIFrPILSHCLGbKYiZB07UoPEoL55tRmmjWdAoU6k76vwEXistYZCrxPMFRkN4PFgy8
        wEuGDZhza84pz9AMz5LrITPvJOQJe+Et34zE1AOI25yHmI17EZG4B2ExWZBHZiIgLA0+8hQ4r4yEe2Ay
        XH0TrpHOREsG2NnkJFoyg2xA5HS08Mj8KmiGsvgcpO8uhOeaZKjbqEC5SEVEekQBNmsZighh7xaGxLQD
        WOYTz4K/GM/Ai4nbL2CQXsVcUFqeLTMsLOVVTddNqg4ExuxG6s4CrPRPEsL3HmlRVq3BD9Vq3K1S449/
        XYJpbzrg+woV7JbK4R28Gc6eMSz4/HgGpsRnfiYZYEES11CvYWGzeDsvMQMalK3wjdyBlG2H4OYdJ2bN
        4ndJ/E6lGqUVakyf6YS5Nn5o0nTD2jEQXrIU2K+IZMFJ4xl4KW7rGWFAEuZNhWFhCRXTZkCtQoPV4RlI
        SqewekSJMN+p1AhxnvF3xFuzl2OhUzAaaXdcsMQPHmveg9074Sw42ZIBPka9HJN6mt5mQ2MEqdpJtIUQ
        vU5PpyA1PEJSEbclD47u64SB0koVvn9I4sS3xO3yFjTw1qzqwlxbb5EqG5cQFpwynoFXojafGjbAYmZY
        nIWZZqKirgUrgjYhOnkfFruuxSKXYNg6y2DtsAYLHQKwYLEv5tn5kPBqzLHxwmxrT7j7JsDKQcaCL481
        IE5DxKvrU04KA9JMSZwwiwq0eiiI8hol3Pw3IjIxGz6hafBem4bVIVvgRYXmKdsED8r3qsCNWBGQBHe/
        BLhR9bt5x2P+4gAWfHVcA+8mf4p+OlGwOMOCzby5mJYTizdRf6+yEUup+MLj9sCL9oGfai5UJ65ecZhj
        68uCv6JbjxngE8tr4UmSASFsgkUVVMkMVzRTVlEPR48YBEftxEoqLm7mvUJHK0ZHKZSK2EBvUgPsqfhc
        VsXgHwu9WXCq0OUPcfFjBF4JTfyYjlN06qXzQQ/Bpx6JPrGv8/u/k96a1XVNsHePhOzdTLj5xrP+8FIV
        UArVVLwMF7GNkxxOK6Lx9/keLPi60OUPcSEZEDthUFT+VyHxxxAcR8TSEYuQxR4VR6wgOmIFxRDRhSj4
        uASLXMNpq00X4U05V4H3zj5EwulyxJ4oR9QnDxBx/D7Cj9ERvfAeFtj5w2H5esycu5IFfzPWADc+MPI5
        ng8OrxH88vi1idct8Dcb5xDa3VJFeLOutWD7f5TIKGlG6r8VSP68CUkXGxF/rgEbiNnW3hSFENob3Fnw
        t5YMcBTYBEeC64HNPImps228vpu/JJCWnxxuqSVYtqkYTklXYB9/iQ6t52EVcRZzQ09hVvAJvD1vFWZZ
        rca0GQ6l9N/HVsHIxkb+F0TNEL8jfj+CP4zgjTHw7xzd0W/D/w+Y8F+ABPdCcJwxFQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>